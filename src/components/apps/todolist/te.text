 <TableBody className="  h-[400px] grow  sm:w-[300px] overflow-hidden">
                    {pagedTasks.map((task: any) => (
                      <TableRow key={task.id} className="h-[69px] overflow-hidden">
                        <TableCell className="font-medium">
                          <Checkbox
                            onClick={() => taskComplete(task)}
                            disabled={selectedTab === "trash"}
                            defaultChecked={task.status === "complete"}
                            className="w-5 h-5 rounded-md"
                          />
                        </TableCell>
                        <TableCell onClick={() => viewTask(task)}>
                          <div
                            className={` text-base font-semibold group-hover:text-primary ${
                              task.status === "complete" ? "line-through" : ""
                            }`}
                          >
                            {task.title}
                          </div>
                          <div
                            className={`line-clamp-1  w-[400px] overflow-hidden text-white-dark ${
                              task.status === "complete" ? "line-through" : ""
                            }`}
                          >
                            {task.descriptionText}
                          </div>
                        </TableCell>
                        {/* <TableCell>
                          
                            <div className="flex items-center space-x-2 justify-end  rtl:space-x-reverse">
                              {task.priority && (
                                <Menu>
                                  <MenuButton>
                                    <Badge
                                      className={cn(
                                        task.priority === "medium"
                                          ? "border border-primary text-primary bg-transparent hover:bg-primary hover-text-white"
                                          : task.priority === "low"
                                          ? "bg-transparent border border-warning text-warning hover:text-white hover:bg-warning"
                                          : task.priority === "high"
                                          ? "bg-transparent border border-danger text-danger hover:text-white  hover:bg-danger"
                                          : task.priority === "medium" &&
                                            isPriorityMenu === task.id
                                          ? "bg-primary  text-white"
                                          : task.priority === "low" &&
                                            isPriorityMenu === task.id
                                          ? "bg-warning text-white"
                                          : task.priority === "high" &&
                                            isPriorityMenu === task.id
                                          ? "bg-danger text-white"
                                          : ""
                                      )}
                                    >
                                      {task.priority}
                                    </Badge>
                                  </MenuButton>
                                  <Transition
                                    enter="transition ease-out duration-75"
                                    enterFrom="opacity-0 scale-95"
                                    enterTo="opacity-100 scale-100"
                                    leave="transition ease-in duration-100"
                                    leaveFrom="opacity-100 scale-100"
                                    leaveTo="opacity-0 scale-95"
                                  >
                                    <MenuItems
                                      anchor="bottom end"
                                      className="w-[140px]  rounded-xl border  bg-white p-1 text-sm/6 dark:text-white  text-dark [--anchor-gap:var(--spacing-1)] focus:outline-none mt-3 z-20"
                                    >
                                      <ul className="text-medium text-sm flex flex-col ">
                                        <li className="py-1 w-full hover:bg-accent text-center">
                                          <button
                                            type="button"
                                            className="text-danger text-left "
                                            onClick={() =>
                                              setPriority(task, "high")
                                            }
                                          >
                                            High
                                          </button>
                                        </li>
                                        <li className="py-1 w-full hover:bg-accent">
                                          <button
                                            type="button"
                                            className="text-primary text-left "
                                            onClick={() =>
                                              setPriority(task, "medium")
                                            }
                                          >
                                            Medium
                                          </button>
                                        </li>
                                        <li className="py-1 w-full hover:bg-accent">
                                          <button
                                            type="button"
                                            className="text-warning text-left "
                                            onClick={() =>
                                              setPriority(task, "low")
                                            }
                                          >
                                            Low
                                          </button>
                                        </li>
                                      </ul>
                                    </MenuItems>
                                  </Transition>
                                </Menu>
                              )}


                            </div>
                        
                        </TableCell> */}
                       
                      </TableRow>
                    ))}
                  </TableBody>